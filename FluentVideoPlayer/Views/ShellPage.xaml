<Page
    x:Class="FluentVideoPlayer.Views.ShellPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"    
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="using:FluentVideoPlayer.ViewModels"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:fcu ="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,5)"
    xmlns:cu ="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,5)"
    xmlns:fluentvideoplayer="using:FluentVideoPlayer"
    mc:Ignorable="d"
    Loaded="ShellPage_Loaded">
    <Page.Resources>
        <DataTemplate x:Key="NavigationMenuItemDataTemplate" x:DataType="vm:ShellNavigationItem">
            <Grid Width="140" Height="40" x:Name="NavViewItemGrid" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="48" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid fcu:Visibility="Collapsed" cu:Visibility="Visible">
                    <Rectangle
                        Width="6"
                        Height="24"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Fill="{ThemeResource SystemControlForegroundAccentBrush}"
                        Visibility="{x:Bind SelectedVis, Mode=OneWay}" />
                </Grid>
                <Viewbox
                    Child="{x:Bind Icon}"
                    ToolTipService.ToolTip="{x:Bind Label}"
                    Margin="16,12"
                    VerticalAlignment="Center" />
                <TextBlock
                    Grid.Column="1"
                    Margin="0,9,0,11"
                    VerticalAlignment="Center"
                    Text="{x:Bind Label}"
                    Style="{StaticResource BodyTextBlockStyle}"
                    TextTrimming="None" />
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal">
                            <Storyboard>
                                <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="PointerOver">
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="BorderBackground"
                                    Storyboard.TargetProperty="Opacity"
                                    To="1"
                                    Duration="0" />
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                </ObjectAnimationUsingKeyFrames>
                                <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="BorderBackground"
                                    Storyboard.TargetProperty="Opacity"
                                    To="1"
                                    Duration="0" />
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListMediumBrush}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                </ObjectAnimationUsingKeyFrames>
                                <PointerDownThemeAnimation TargetName="ContentPresenter" />
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="DisabledStates">
                        <VisualState x:Name="Enabled" />
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="ContentBorder"
                                    Storyboard.TargetProperty="Opacity"
                                    To="{ThemeResource ListViewItemDisabledThemeOpacity}"
                                    Duration="0" />
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Grid>
        </DataTemplate>
    </Page.Resources>
    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="32"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        
        <Border fcu:Background="{ThemeResource SystemControlChromeHighAcrylicWindowMediumBrush}"
              cu:Background="{ThemeResource SystemControlBackgroundAltHighBrush}"   x:Name="TitleBorder"     
             >
            <TextBlock x:Uid="AppName" Padding="12,0,0,0" x:Name="AppNameBlock" VerticalAlignment="Center" FontSize="12"/>
        </Border>
        <Grid Grid.Row="1" fcu:Background="{ThemeResource SystemControlChromeHighAcrylicWindowMediumBrush}"
              cu:Background="{ThemeResource SystemControlBackgroundAltHighBrush}" >

            <controls:HamburgerMenu                
             OpenPaneLength="140"
        x:Name="NavigationMenu"
        UseNavigationViewWhenPossible="False"
        SelectedItem="{x:Bind ViewModel.Selected, Mode=OneWay}"
        DisplayMode="{x:Bind ViewModel.DisplayMode, Mode=OneWay}"
        IsPaneOpen="{x:Bind ViewModel.IsPaneOpen, Mode=TwoWay}"
        ItemTemplate="{StaticResource NavigationMenuItemDataTemplate}"
        ItemsSource="{x:Bind ViewModel.PrimaryItems}"
        OptionsItemTemplate="{StaticResource NavigationMenuItemDataTemplate}"
        OptionsItemsSource="{x:Bind ViewModel.SecondaryItems}"
        PaneBackground="{ThemeResource SystemControlBackgroundAltHighBrush}"
        PaneForeground="{ThemeResource SystemControlForegroundBaseHighBrush}"
        >
                <i:Interaction.Behaviors>
                    <ic:EventTriggerBehavior EventName="ItemInvoked">
                        <ic:InvokeCommandAction Command="{x:Bind ViewModel.ItemSelectedCommand}" />
                    </ic:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <Grid Background="{ThemeResource SystemControlBackgroundAltHighBrush}">
                    <Frame x:Name="shellFrame"/>
                </Grid>

            </controls:HamburgerMenu>

        </Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="WindowStates">
                <i:Interaction.Behaviors>
                    <ic:EventTriggerBehavior EventName="CurrentStateChanged">
                        <ic:InvokeCommandAction Command="{x:Bind ViewModel.StateChangedCommand}"/>
                    </ic:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <VisualState x:Name="PanoramicState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1024"/>
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="640"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
